name: Build MacOS RDM

on: 
#   release:
#     types: [published]
  push:
    tags:
    - '*'
#     branches: 
#     - master
  # schedule:
  #   - cron: "0 23 */2 * *"
  watch:
    types: [started]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        qt_ver: [5.12.6]
        qt_arch: [clang_64]
    env:
      package_name: rdm
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.0.0
        with:
          version: ${{ matrix.qt_ver }}
      - name: Clone repo
        run: |
          git clone --recursive https://github.com/uglide/RedisDesktopManager.git -b ${{ steps.get_version.outputs.VERSION }} rdm 
      # patch: https://github.com/cjbd/breakpad/commit/e436b073307e84a7695b355a4ea98acbe5548423
      - name: Install requirements
        run: brew install openssl cmake python3      
      - name: Build
        run: |
          cd rdm
          set -x
          # sed -i '' 's/1050/1070/g' ./3rdparty/gbreakpad/src/client/mac/sender/Breakpad.xib
          cd src
          echo -e '#ifndef RDM_VERSION\n    #define RDM_VERSION "2099.0.0"\n#endif // !RDM_VERSION' >> version.h
          ./configure
          cd ../3rdparty/crashreporter/
          git checkout 7ec6f00
          qmake DESTDIR=./bin
          make -s -j 8
          mkdir -p ../../bin/osx/release
          cp ./bin/crashreporter ../../bin/osx/release 
          cd ../../src
          cp resources/Info.plist.sample resources/Info.plist
          sed -i '' "s/0.9.999/0.9.8/g" rdm.pro
          sed -i '' 's/debug: CONFIG-=app_bundle/#debug: CONFIG-=app_bundle/g' rdm.pro
          qmake CONFIG-=debug 
          make -s -j 8
      - name: Package dmg
        run: |
          set -x
          cd rdm/bin/osx/release 
          macdeployqt ${package_name}.app -qmldir=../../../src/qml -verbose=1 -dmg
          cp rdm.dmg redis-desktop-manager-${{ steps.get_version.outputs.VERSION }}.dmg
          zip --junk-paths rdm.zip redis-desktop-manager-${{ steps.get_version.outputs.VERSION }}.dmg
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./rdm/bin/osx/release/rdm.zip
          asset_name: rdm.zip
          asset_content_type: application/zip


