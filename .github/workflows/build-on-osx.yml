name: Build MacOS RDM

on: 
#   release:
#     types: [published]
  push:
    tags:
    - '*'
#     branches: 
#     - master
  # schedule:
  #   - cron: "0 23 */2 * *"
  watch:
    types: [started]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        qt_ver: [5.12.6]
        qt_arch: [clang_64]
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.0.0
        with:
          version: ${{ matrix.qt_ver }}
      - name: Clone repo
        run: |
          git clone --recursive https://github.com/uglide/RedisDesktopManager.git -b ${{ steps.get_version.outputs.VERSION }} rdm 
      - name: Install requirements
        run: |
          set -x
          cd rdm
          mkdir -p ./bin/osx/release
          cd bin/osx/release
          echo -e '[install]\nprefix=' >> setup.cfg
          brew install python3 openssl cmake tree
          mkdir -p /usr/local/opt/python/lib/Python.framework/Versions/
          ln -s /usr/local/opt/python/Frameworks/Python.framework/Versions/3.7 /usr/local/opt/python/lib/Python.framework/Versions/3.7
          pip3 install -r ../../../src/py/requirements.txt --upgrade
          # cd /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7
          rm -rf test
          python3 -m compileall -b .
      - name: Build
        run: |
          set -x
          cd rdm/src
          sed -i '' 's/^\(\s*\)VERSION=.*/\1VERSION=${{ steps.get_version.outputs.VERSION }}/g' rdm.pro
          echo -e '#ifndef RDM_VERSION\n    #define RDM_VERSION "${{ steps.get_version.outputs.VERSION }}"\n#endif // !RDM_VERSION' >> version.h
          cp resources/Info.plist.sample resources/Info.plist
          sed -i '' 's/0.0.0/${{ steps.get_version.outputs.VERSION }}/g' resources/Info.plist
          qmake CONFIG-=debug CONFIG+=sdk_no_version_check
          make -s -j 8
      - name: Copy libs
        run: |
          set -x
          cd rdm/bin/osx/release
          cp -rf /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework Redis\ Desktop\ Manager.app/Contents/Frameworks/
          cd Redis\ Desktop\ Manager.app/Contents/Frameworks/Python.framework/Versions/3.7/lib/python3.7/
          rm -rf __pycache__
          rm -rf *.py
          ls -al
      - name: Package dmg
        run: |
          set -x
          cd rdm/bin/osx/release
          macdeployqt Redis\ Desktop\ Manager.app -qmldir=../../../src/qml -verbose=1
          otool -L Redis\ Desktop\ Manager.app/Contents/MacOS/Redis\ Desktop\ Manager
          cp Redis\ Desktop\ Manager.dmg redis-desktop-manager-${{ steps.get_version.outputs.VERSION }}.app
          zip --junk-paths rdm-${{ steps.get_version.outputs.VERSION }}.zip redis-desktop-manager-${{ steps.get_version.outputs.VERSION }}.app
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./rdm/bin/osx/release/rdm-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: rdm-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: rdm-${{ steps.get_version.outputs.VERSION }}
          path: ./rdm/bin/osx/release/rdm-${{ steps.get_version.outputs.VERSION }}.zip
